Filename: base.pug
Content:
doctype html
html
  head
    title Ratings App
    link(rel='stylesheet', href='/stylesheets/main.css')
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    script(src='https://cdn.jsdelivr.net/npm/chart.js')
  body
    .grid-container
      .topbar
        a(href='/home') Home
        if user
            a(href='/profile') Profile
            a(href='/logout') Logout
        else
            a(href='/login') Login
            a(href='/register') Register

      .sidebar
        block sidebarContent
      .main-area
        block mainContent

    // Global scripts loaded for all pages
    script.
      document.addEventListener('DOMContentLoaded', function () {
        const toggleThemeButton = document.querySelector('.toggle-theme');
        if (toggleThemeButton) {
          toggleThemeButton.addEventListener('click', function () {
            document.body.classList.toggle('dark-mode');
            document.body.classList.toggle('light-mode');

            const newMode = document.body.classList.contains('dark-mode') ? 'dark' : 'light';
            axios.post('/profile/preferences', { dark_mode: newMode === 'dark' });
          });
        }
      });

    // Global scripts loaded for all pages
    script(src='/scripts/global.js')

    // Placeholder for page-specific scripts
    block scripts

----------------------------------------
Filename: base_profile.pug
Content:
extends base

block sidebarContent
  h2 User Profile
  ul
    li: a(href='/profile' class=(activeTab === 'general' ? 'active' : '')) General Settings
    li: a(href='/profile/password' class=(activeTab === 'password' ? 'active' : '')) Change Password
    li: a(href='/profile/preferences' class=(activeTab === 'preferences' ? 'active' : '')) Manage Preferences
    li: a(href='/profile/history' class=(activeTab === 'history' ? 'active' : '')) Rating History
    li: a(href='/profile/privacy' class=(activeTab === 'privacy' ? 'active' : '')) Privacy & Data
----------------------------------------
Filename: chart.pug
Content:
doctype html
html
  head
    title Ratings Chart
    script(src='https://cdn.jsdelivr.net/npm/chart.js')
  body
    h1 Rating Analysis
    canvas#ratingChart(width='800', height='400')
    script.
      const ctx = document.getElementById('ratingChart').getContext('2d');
      const ratingData = JSON.parse('!{ratingData}');

      // Ensure all x-values are numbers
      ratingData.scatter.forEach(d => d.x = Number(d.x));
      ratingData.curve.forEach(d => d.x = Number(d.x));

      const mixedChart = new Chart(ctx, {
          type: 'scatter', // Base type is scatter to allow numerical x-axis
          data: {
              datasets: [{
                  type: 'scatter',
                  label: 'Individual Ratings',
                  data: ratingData.scatter,
                  backgroundColor: 'rgba(255, 99, 132, 0.5)',
                  borderColor: 'rgba(255, 99, 132, 1)',
                  showLine: false // Ensure no line is drawn for scatter points
              }, {
                  type: 'line',
                  label: 'Average Ratings',
                  data: ratingData.curve,
                  backgroundColor: 'rgba(54, 162, 235, 0.5)',
                  borderColor: 'rgba(54, 162, 235, 1)',
                  fill: false // Line chart does not fill under the line
              }]
          },
          options: {
              scales: {
                  x: {
                      type: 'linear',
                      position: 'bottom',
                      title: {
                          display: true,
                          text: 'Semester ID'
                      }
                  },
                  y: {
                      title: {
                          display: true,
                          text: 'Rating'
                      }
                  }
              },
              plugins: {
                  legend: {
                      display: true,
                      position: 'top'
                  }
              }
          }
      });

----------------------------------------
Filename: general.pug
Content:
extends base_profile

block mainContent
  h1 General Settings
  
  form(action='/profile/update' method='POST')
    label(for='username') Username:
    input(type='text', name='username', value=user.username, required=true)

    label(for='email') Email:
    input(type='email', name='email', value=user.email, required=true)

    button(type='submit') Update Profile

----------------------------------------
Filename: history.pug
Content:
extends base_profile

block mainContent
  h1 Rating History
  ul
    each rating in ratings
      li
        p Module: #{rating.module_name}
        p Professor: #{rating.professor_name}
        p Rating: #{rating.rating}
        p Comment: #{rating.comment}
        p Semester: #{rating.semester}
        p Date: #{rating.created_at}

----------------------------------------
Filename: home.pug
Content:
extends base

block sidebarContent
  h2 T&A
  br
  h3 Select Category
  select(id="categorySelector", onchange="toggleSelection()")
    option(value="") Select
    option(value="professor") Professor
    option(value="module") Module

  p Select Professor/Module:
  input(type="text" id="firstDropdownSearch" placeholder="Search..." oninput="filterDropdown('firstDropdown', this.value)")
  select(id="firstDropdown", onchange="updateSecondDropdown()")
    option(value="") Make selection

  p Select Related:
  input(type="text" id="secondDropdownSearch" placeholder="Search..." oninput="filterDropdown('secondDropdown', this.value)")
  select(id="secondDropdown", onchange="loadChart()")
    option(value="") Make selection

block mainContent
  canvas#ratingChart(width='800', height='400')

  button(type='button' id='openPanel') Submit a Rating

  // Sliding panel for the form
  div#slidingPanel
    form(action='/submit-rating', method='POST')
      label(for='rating') Rating:
      select(name='rating', required=true)
        option(value='') Select Rating
        each value in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          option(value=value) #{value}

      label(for='grade') Grade:
      select(name='grade', required=true)
        option(value='') Select Grade
        option(value=6.0) 6.0 / A
        option(value=5.5) 5.5 / B
        option(value=5.0) 5.0 / C
        option(value=4.5) 4.5 / D
        option(value=4.0) 4.0 / E
        option(value=3.5) Failed / F

      label(for='workload') Workload:
      select(name='workload', required=true)
        option(value='') Select Workload
        option(value=1) Walk in the Park
        option(value=2) Manageable
        option(value=3) Moderate Effort
        option(value=4) Challenging
        option(value=5) Pain and Suffering

      label(for='sem_id') Semester:
      select(id='sem_id')
        option(value='') Select Semester

      input(type='hidden', name='prof_id_hidden', id='prof_id_hidden')
      input(type='hidden', name='module_id_hidden', id='module_id_hidden')
      input(type='hidden', name='sem_id_hidden', id='sem_id_hidden')

      button(type='submit') Submit Rating

block scripts
  script(src='/scripts/home.js')
  script(src='/scripts/sliding-panel.js')

----------------------------------------
Filename: index.pug
Content:
doctype html
html
  head
    title Ratings Reviews
  body
    h1 Submit a New Rating
    form(action='/submit-rating', method='POST')
      label(for='comment') Comment:
      input(type='text', name='comment', required=true)

      label(for='rating') Rating:
      input(type='number', name='rating', required=true)

      label(for='module_id') Module:
      input(type='number', name='module_id', required=true)

      label(for='prof_id') Professor:
      input(type='number', name='prof_id', required=true)

      label(for='sem_id') Semester ID:
      input(type='number', name='sem_id', required=true)

      button(type='submit') Submit Rating

    h1 Ratings Data
    ul
      each rating in ratings
        li
          p Rating ID: #{rating.rating_id}
          p Rating: #{rating.rating}
          p Module ID: #{rating.module_id}
          p Prof ID: #{rating.prof_id}
          p Comment: #{rating.comment}
          p Semester ID: #{rating.sem_id}
          p Timestamp: #{rating.created_at}

----------------------------------------
Filename: login.pug
Content:
extends base

block mainContent
  h1 Login
  form(action='/login' method='post')
    label(for='username') Username:
    input(type='text' name='username' required)
    br
    label(for='password') Password:
    input(type='password' name='password' required)
    br
    button(type='submit') Login
  a(href='/resetpassword') Forgot Password?

----------------------------------------
Filename: password.pug
Content:
extends base_profile

block mainContent
  h1 Change Password
  form(action='/profile/password', method='POST')
    label(for='current_password') Current Password:
    input(type='password', name='current_password', required)

    label(for='new_password') New Password:
    input(type='password', name='new_password', required)

    label(for='confirm_password') Confirm New Password:
    input(type='password', name='confirm_password', required)

    button(type='submit') Update Password

----------------------------------------
Filename: preferences.pug
Content:
extends base_profile

block mainContent
  h1 Manage Preferences
  form(action='/profile/preferences', method='POST')

    label(for='dark_mode') Dark Mode:
    input(type='checkbox', name='dark_mode', checked=(user.preferences.dark_mode ? 'checked' : ''))

    label(for='email_notifications') Email Notifications:
    input(type='checkbox', name='email_notifications', checked=(user.preferences.email_notifications ? 'checked' : ''))

    button(type='submit') Save Preferences

----------------------------------------
Filename: privacy.pug
Content:
extends base_profile

block mainContent
  h1 Privacy & Data

  // Form for account deletion
  form(action='/profile/delete', method='POST')
    p Delete your account and all associated data. This action cannot be undone.
    button(type='submit') Delete Account

  // Form for updating visibility
  form(action='/profile/privacy/update', method='POST')
    label(for='visibility') Profile Visibility:
    select(name='visibility')
      option(value='public' selected=user.visibility === 'public') Public
      option(value='private' selected=user.visibility === 'private') Private
    button(type='submit') Update Visibility

----------------------------------------
Filename: profile.pug
Content:
extends base_profile

block mainContent
  h1 Welcome, #{user.username}
  form(action='/profile/update', method='POST')
    label(for='username') Username:
    input(type='text', name='username', value=user.username, required)
    
    label(for='email') Email:
    input(type='email', name='email', value=user.email, required)

    label(for='visibility') Visibility:
    input(type='checkbox', name='visibility', checked=(user.visibility ? 'checked' : ''))

    button(type='submit') Update Profile

----------------------------------------
Filename: register.pug
Content:
extends base

block mainContent
  h1 Register
  form(action='/register' method='post')
    label(for='username') Username:
    input(type='text' name='username' required)
    br
    label(for='email') Email:
    input(type='email' name='email' required)
    br
    label(for='password') Password:
    input(type='password' name='password' required)
    br
    button(type='submit') Register

----------------------------------------
Filename: resetpassword.pug
Content:
extends base

block mainContent
  h1 Reset Password
  form(action='/resetpassword' method='post')
    label(for='identifier') Enter your username or email:
    input(type='text' name='identifier' required)
    br
    button(type='submit') Reset Password

----------------------------------------
Filename: review-summary.pug
Content:
extends base

block mainContent
  h1 Review Summary
  p Thank you for submitting your rating!

  h3 Selections:
  ul
    li Category: #{category || 'Not selected'}
    li Professor/Module: #{prof_id || 'Not selected'}
    li Related: #{mod_id || 'Not selected'}
----------------------------------------
